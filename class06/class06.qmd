---
title: "class06"
format: html
---

---
title: "Week 5: R Functions & Gradebook Analysis"
author: "Muhammad Tariq"
date: "2025-04-24"
format: pdf
editor: visual
---

## Q1. Define `grade()` Function

```{r}
# Example input vectors
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)

# Define the function
#' Calculate average score for a vector of student scores dropping the lowest score.
#' Missing values will be treated as zero.
#'
#' @param x A numeric vector of homework scores
#' @returns Average score
#' @export
#' @examples
#' student <- c(100, NA, 90, 97)
#' grade(student)

grade <- function(x) {
  # Mask NA with zero
  x[is.na(x)] <- 0
  # Drop the lowest score
  mean(x[-which.min(x)])
}

# Test the function
grade(student1)
grade(student2)
grade(student3)
```

## Q2. Who is the Top Scoring Student?

```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)

# Apply grade function to each student
results <- apply(gradebook, 1, grade)
sorted_results <- sort(results, decreasing = TRUE)
sorted_results

# Identify the top student
which.max(results)
```

## Q3. Which Homework Was the Toughest?

```{r}
# Calculate mean scores per homework
ave.scores <- apply(gradebook, 2, mean, na.rm = TRUE)
ave.scores
which.min(ave.scores)

# Calculate median scores per homework
med.scores <- apply(gradebook, 2, median, na.rm = TRUE)
med.scores
which.min(med.scores)

# Visualize using boxplot
boxplot(gradebook, main = "Distribution of Homework Scores", ylab = "Scores")
```

## Q4. Optional: Most Predictive Homework

```{r}
# Replace NA with 0 for correlation analysis
masked.gradebook <- gradebook
masked.gradebook[is.na(masked.gradebook)] <- 0

# Calculate correlation of each homework with final grades
apply(masked.gradebook, 2, cor, x = results)
```
